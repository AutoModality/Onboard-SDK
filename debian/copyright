Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/
Upstream-Name: onboard-sdk
Source: <url://example.com>

Files:     osdk-core/api/inc/dji_ack.hpp
           osdk-core/api/inc/dji_broadcast.hpp
           osdk-core/api/inc/dji_camera.hpp
           osdk-core/api/inc/dji_command.hpp
           osdk-core/api/inc/dji_control.hpp
           osdk-core/api/inc/dji_error.hpp
           osdk-core/api/inc/dji_gimbal.hpp
           osdk-core/api/inc/dji_hardware_sync.hpp
           osdk-core/api/inc/dji_hotpoint.hpp
           osdk-core/api/inc/dji_mfio.hpp
           osdk-core/api/inc/dji_mission_base.hpp
           osdk-core/api/inc/dji_mission_manager.hpp
           osdk-core/api/inc/dji_mission_type.hpp
           osdk-core/api/inc/dji_mobile_communication.hpp
           osdk-core/api/inc/dji_status.hpp
           osdk-core/api/inc/dji_subscription.hpp
           osdk-core/api/inc/dji_telemetry.hpp
           osdk-core/api/inc/dji_telemetry_doc.hpp
           osdk-core/api/inc/dji_type.hpp
           osdk-core/api/inc/dji_vehicle.hpp
           osdk-core/api/inc/dji_vehicle_callback.hpp
           osdk-core/api/inc/dji_version.hpp
           osdk-core/api/inc/dji_virtual_rc.hpp
           osdk-core/api/inc/dji_waypoint.hpp
           osdk-core/api/src/dji_ack.cpp
           osdk-core/api/src/dji_broadcast.cpp
           osdk-core/api/src/dji_camera.cpp
           osdk-core/api/src/dji_command.cpp
           osdk-core/api/src/dji_control.cpp
           osdk-core/api/src/dji_error.cpp
           osdk-core/api/src/dji_gimbal.cpp
           osdk-core/api/src/dji_hardware_sync.cpp
           osdk-core/api/src/dji_hotpoint.cpp
           osdk-core/api/src/dji_mfio.cpp
           osdk-core/api/src/dji_mission_manager.cpp
           osdk-core/api/src/dji_mobile_communication.cpp
           osdk-core/api/src/dji_subscription.cpp
           osdk-core/api/src/dji_vehicle.cpp
           osdk-core/api/src/dji_version.cpp
           osdk-core/api/src/dji_virtual_rc.cpp
           osdk-core/api/src/dji_waypoint.cpp
           osdk-core/hal/inc/dji_hard_driver.hpp
           osdk-core/hal/inc/dji_log.hpp
           osdk-core/hal/inc/dji_memory.hpp
           osdk-core/hal/inc/dji_platform_manager.hpp
           osdk-core/hal/inc/dji_thread_manager.hpp
           osdk-core/hal/src/dji_hard_driver.cpp
           osdk-core/hal/src/dji_log.cpp
           osdk-core/hal/src/dji_memory.cpp
           osdk-core/hal/src/dji_platform_manager.cpp
           osdk-core/hal/src/dji_thread_manager.cpp
           osdk-core/platform/STM32/inc/STM32F4DataGuard.h
           osdk-core/platform/STM32/inc/STM32F4SerialDriver.h
           osdk-core/platform/STM32/src/STM32F4DataGuard.cpp
           osdk-core/platform/STM32/src/STM32F4SerialDriver.cpp
           osdk-core/platform/default/inc/dji_memory_default.hpp
           osdk-core/platform/default/src/dji_memory_default.cpp
           osdk-core/platform/linux/inc/linux_serial_device.hpp
           osdk-core/platform/linux/inc/posix_thread.hpp
           osdk-core/platform/linux/inc/posix_thread_manager.hpp
           osdk-core/platform/linux/src/linux_serial_device.cpp
           osdk-core/platform/linux/src/posix_thread.cpp
           osdk-core/platform/linux/src/posix_thread_manager.cpp
           osdk-core/platform/manifold/inc/DJIHardDriverManifold.h
           osdk-core/platform/manifold/inc/DJI_HardDriver_Manifold.h
           osdk-core/platform/manifold/src/DJIHardDriverManifold.cpp
           osdk-core/platform/qt/inc/qt_serial_device.hpp
           osdk-core/platform/qt/inc/qt_thread.hpp
           osdk-core/platform/qt/src/qt_serial_device.cpp
           osdk-core/platform/qt/src/qt_thread.cpp
           osdk-core/protocol/inc/dji_aes.hpp
           osdk-core/protocol/inc/dji_crc.hpp
           osdk-core/protocol/inc/dji_open_protocol.hpp
           osdk-core/protocol/inc/dji_protocol_base.hpp
           osdk-core/protocol/src/dji_aes.cpp
           osdk-core/protocol/src/dji_open_protocol.cpp
           osdk-core/protocol/src/dji_protocol_base.cpp
           osdk-core/utility/inc/dji_circular_buffer.hpp
           osdk-core/utility/inc/dji_macros.hpp
           osdk-core/utility/inc/dji_singleton.hpp
           osdk-core/utility/src/dji_circular_buffer.cpp
           osdk-core/utility/src/dji_singleton.cpp
           sample/Qt/djiosdk-qt-sample/Broadcast/broadcast.cpp
           sample/Qt/djiosdk-qt-sample/Broadcast/broadcast.hpp
           sample/Qt/djiosdk-qt-sample/CameraGimbalControl/camera_gimbal_control_panel.cpp
           sample/Qt/djiosdk-qt-sample/CameraGimbalControl/camera_gimbal_control_panel.hpp
           sample/Qt/djiosdk-qt-sample/FlightControl/flight_control_panel.cpp
           sample/Qt/djiosdk-qt-sample/FlightControl/flight_control_panel.hpp
           sample/Qt/djiosdk-qt-sample/MFIO/mfio_panel.cpp
           sample/Qt/djiosdk-qt-sample/MFIO/mfio_panel.hpp
           sample/Qt/djiosdk-qt-sample/Missions/hotpoint_panel.cpp
           sample/Qt/djiosdk-qt-sample/Missions/hotpoint_panel.hpp
           sample/Qt/djiosdk-qt-sample/Missions/qwaypoints.cpp
           sample/Qt/djiosdk-qt-sample/Missions/qwaypoints.hpp
           sample/Qt/djiosdk-qt-sample/Missions/sdk_widgets.hpp
           sample/Qt/djiosdk-qt-sample/Subscribe/subscribe_panel.cpp
           sample/Qt/djiosdk-qt-sample/Subscribe/subscribe_panel.hpp
           sample/Qt/djiosdk-qt-sample/main.cpp
           sample/Qt/djiosdk-qt-sample/qtosdk.cpp
           sample/Qt/djiosdk-qt-sample/qtosdk.hpp
           sample/STM32/OnBoardSDK_STM32/Bsp/BspUsart.cpp
           sample/STM32/OnBoardSDK_STM32/Bsp/BspUsart.h
           sample/STM32/OnBoardSDK_STM32/Bsp/bsp.cpp
           sample/STM32/OnBoardSDK_STM32/Bsp/bsp.h
           sample/STM32/OnBoardSDK_STM32/Bsp/timer.cpp
           sample/STM32/OnBoardSDK_STM32/Bsp/timer.h
           sample/STM32/OnBoardSDK_STM32/User/Activate.cpp
           sample/STM32/OnBoardSDK_STM32/User/Activate.h
           sample/STM32/OnBoardSDK_STM32/User/CameraGimbalSample.cpp
           sample/STM32/OnBoardSDK_STM32/User/CameraGimbalSample.h
           sample/STM32/OnBoardSDK_STM32/User/FlightControlSample.cpp
           sample/STM32/OnBoardSDK_STM32/User/FlightControlSample.h
           sample/STM32/OnBoardSDK_STM32/User/MissionSample.cpp
           sample/STM32/OnBoardSDK_STM32/User/MissionSample.h
           sample/STM32/OnBoardSDK_STM32/User/MobileSample.cpp
           sample/STM32/OnBoardSDK_STM32/User/MobileSample.h
           sample/STM32/OnBoardSDK_STM32/User/PayloadSample.cpp
           sample/STM32/OnBoardSDK_STM32/User/PayloadSample.h
           sample/STM32/OnBoardSDK_STM32/User/Receive.cpp
           sample/STM32/OnBoardSDK_STM32/User/Receive.h
           sample/STM32/OnBoardSDK_STM32/User/TelemetrySample.cpp
           sample/STM32/OnBoardSDK_STM32/User/TelemetrySample.h
           sample/STM32/OnBoardSDK_STM32/User/TimeSyncSample.cpp
           sample/STM32/OnBoardSDK_STM32/User/TimeSyncSample.h
           sample/STM32/OnBoardSDK_STM32/User/cppforstm32.cpp
           sample/STM32/OnBoardSDK_STM32/User/cppforstm32.h
           sample/STM32/OnBoardSDK_STM32/User/main.cpp
           sample/STM32/OnBoardSDK_STM32/User/main.h
           sample/linux/advanced-sensing/camera_stream_callback_sample/camera-stream-callback-sample.cpp
           sample/linux/advanced-sensing/camera_stream_poll_sample/camera-stream-poll-sample.cpp
           sample/linux/advanced-sensing/camera_stream_target_tracking_sample/target_tracking.cpp
           sample/linux/advanced-sensing/camera_stream_target_tracking_sample/tracking_utility.cpp
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/stereo_process_container.cpp
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/stereo_vision_depth_perception_sample.cpp
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/utility/camera_param.cpp
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/utility/config.cpp
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/utility/point_cloud_viewer.cpp
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/utility/stereo_frame.cpp
           sample/linux/advanced-sensing/stereo_vision_multi_thread_sample/image_process_container.cpp
           sample/linux/advanced-sensing/stereo_vision_multi_thread_sample/image_process_container.hpp
           sample/linux/advanced-sensing/stereo_vision_multi_thread_sample/stereo_vision_multi_thread_sample.cpp
           sample/linux/advanced-sensing/stereo_vision_multi_thread_sample/stereo_vision_multi_thread_sample.hpp
           sample/linux/advanced-sensing/stereo_vision_multi_thread_sample/utility_thread.cpp
           sample/linux/advanced-sensing/stereo_vision_multi_thread_sample/utility_thread.hpp
           sample/linux/advanced-sensing/stereo_vision_single_thread_sample/stereo_vision_single_thread_sample.cpp
           sample/linux/advanced-sensing/stereo_vision_single_thread_sample/stereo_vision_single_thread_sample.hpp
           sample/linux/camera-gimbal/camera_gimbal_sample.cpp
           sample/linux/camera-gimbal/camera_gimbal_sample.hpp
           sample/linux/camera-gimbal/main.cpp
           sample/linux/common/dji_linux_environment.cpp
           sample/linux/common/dji_linux_environment.hpp
           sample/linux/common/dji_linux_helpers.cpp
           sample/linux/common/dji_linux_helpers.hpp
           sample/linux/flight-control/flight_control_sample.cpp
           sample/linux/flight-control/flight_control_sample.hpp
           sample/linux/flight-control/main.cpp
           sample/linux/logging/logging_sample.cpp
           sample/linux/logging/logging_sample.hpp
           sample/linux/logging/main.cpp
           sample/linux/mfio/main.cpp
           sample/linux/mfio/mfio_sample.cpp
           sample/linux/mfio/mfio_sample.hpp
           sample/linux/missions/main.cpp
           sample/linux/missions/mission_sample.cpp
           sample/linux/missions/mission_sample.hpp
           sample/linux/missions/waypoint_v2_main.cpp
           sample/linux/missions/waypoint_v2_sample.cpp
           sample/linux/missions/waypoint_v2_sample.hpp
           sample/linux/mobile/main.cpp
           sample/linux/mobile/mobile_sample.cpp
           sample/linux/mobile/mobile_sample.hpp
           sample/linux/payload-3rd-party/main.cpp
           sample/linux/payload-3rd-party/payload-control-sample.cpp
           sample/linux/payload-3rd-party/payload-control-sample.hpp
           sample/linux/telemetry/main.cpp
           sample/linux/telemetry/telemetry_sample.cpp
           sample/linux/telemetry/telemetry_sample.hpp
           sample/linux/time-sync/time_sync_callback_sample.cpp
           sample/linux/time-sync/time_sync_poll_sample.cpp
Copyright: 2016-2916 DJI
           __NO_COPYRIGHT__
License:   __UNKNOWN__
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
 .
 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.
 .
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE

Files:     .clang-format
           .gitignore
           Doxyfile
           README.md
           osdk-core/.gitignore
           osdk-core/README.md
           osdk-core/api/inc/dji_mobile_device.hpp
           osdk-core/api/inc/dji_payload_device.hpp
           osdk-core/api/src/dji_mobile_device.cpp
           osdk-core/api/src/dji_payload_device.cpp
           osdk-core/cmake-modules/DJIOSDKConfig.cmake.in
           osdk-core/cmake-modules/DJIOSDKConfigVersion.cmake.in
           osdk-core/cmake-modules/DownloadProject/DownloadProject.CMakeLists.cmake.in
           osdk-core/cmake-modules/DownloadProject/DownloadProject.cmake
           osdk-core/cmake-modules/External_AdvancedSensing.cmake
           osdk-core/cmake-modules/External_WaypointV2Core.cmake
           osdk-core/cmake-modules/FindAdvancedSensing.cmake
           osdk-core/cmake-modules/FindFFMPEG.cmake
           osdk-core/cmake-modules/FindLibUSB.cmake
           osdk-core/cmake-modules/FindWaypt2Core.cmake
           osdk-core/config_example.json
           osdk-core/platform/Readme.md
           osdk-core/platform/STM32/inc/stm32f4xx.h
           osdk-core/platform/default/readme.md
           sample/Qt/README.md
           sample/Qt/djiosdk-qt-sample/Broadcast/broadcast.pri
           sample/Qt/djiosdk-qt-sample/CameraGimbalControl/camera_gimbal_control_panel.pri
           sample/Qt/djiosdk-qt-sample/FlightControl/flight_control_panel.pri
           sample/Qt/djiosdk-qt-sample/MFIO/mfio_panel.pri
           sample/Qt/djiosdk-qt-sample/Missions/Missions.pri
           sample/Qt/djiosdk-qt-sample/Subscribe/SubscribePanel.pri
           sample/Qt/djiosdk-qt-sample/UserConfig.txt
           sample/Qt/djiosdk-qt-sample/djiosdk-qt-sample.pro
           sample/Qt/djiosdk-qt-sample/stylesheets/material-blue.qss
           sample/STM32/OnBoardSDK_STM32/Lib/CMSIS/inc/stm32f4xx.h
           sample/STM32/OnBoardSDK_STM32/Lib/CMSIS/inc/system_stm32f4xx.h
           sample/STM32/OnBoardSDK_STM32/Lib/CMSIS/src/startup_stm32f40_41xxx.s
           sample/STM32/OnBoardSDK_STM32/Lib/CMSIS/src/startup_stm32f40xx.s
           sample/STM32/OnBoardSDK_STM32/Lib/CMSIS/src/system_stm32f4xx.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/misc.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_adc.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_crc.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dbgmcu.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_exti.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_iwdg.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_pwr.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rng.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rtc.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_syscfg.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_wwdg.h
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/misc.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dma.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_pwr.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rng.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c
           sample/STM32/OnBoardSDK_STM32/Lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c
           sample/STM32/OnBoardSDK_STM32/Project/RTE/_DJI_LIB/RTE_Components.h
           sample/STM32/OnBoardSDK_STM32/Project_Gcc/Makefile
           sample/STM32/OnBoardSDK_STM32/Project_Gcc/setup_and_build.sh
           sample/STM32/OnBoardSDK_STM32/Project_Gcc/startup_stm32f40xx.s
           sample/STM32/OnBoardSDK_STM32/Project_Gcc/stm32_flash.ld
           sample/STM32/OnBoardSDK_STM32/Project_Gcc/syscalls.c
           sample/STM32/OnBoardSDK_STM32/RTE/RTE_Components.h
           sample/STM32/OnBoardSDK_STM32/User/stm32f4xx_conf.h
           sample/STM32/OnBoardSDK_STM32/doc/readme.txt
           sample/STM32/OnBoardSDK_STM32/keilkilll.bat
           sample/STM32/README.md
           sample/linux/advanced-sensing/camera_stream_callback_sample/CMakeLists.txt
           sample/linux/advanced-sensing/camera_stream_poll_sample/CMakeLists.txt
           sample/linux/advanced-sensing/camera_stream_target_tracking_sample/CMakeLists.txt
           sample/linux/advanced-sensing/camera_stream_target_tracking_sample/tracking_utility.hpp
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/CMakeLists.txt
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/m210_stereo_param.yaml
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/stereo_process_container.hpp
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/stereo_vision_depth_perception_sample.hpp
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/utility/camera_param.hpp
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/utility/config.hpp
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/utility/frame.hpp
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/utility/point_cloud_viewer.hpp
           sample/linux/advanced-sensing/stereo_vision_depth_perception_sample/utility/stereo_frame.hpp
           sample/linux/advanced-sensing/stereo_vision_multi_thread_sample/CMakeLists.txt
           sample/linux/advanced-sensing/stereo_vision_single_thread_sample/CMakeLists.txt
           sample/linux/common/UserConfig.txt
Copyright: 2013 STMicroelectronics ********************
           2017-2019 DJI.
           __NO_COPYRIGHT_NOR_LICENSE__
License:   __UNKNOWN__

Files:     CMakeLists.txt
           osdk-core/CMakeLists.txt
           sample/Qt/djiosdk-qt-sample/CMakeLists.txt
           sample/linux/CMakeLists.txt
           sample/linux/advanced-sensing/CMakeLists.txt
           sample/linux/camera-gimbal/CMakeLists.txt
           sample/linux/flight-control/CMakeLists.txt
           sample/linux/logging/CMakeLists.txt
           sample/linux/mfio/CMakeLists.txt
           sample/linux/missions/CMakeLists.txt
           sample/linux/mobile/CMakeLists.txt
           sample/linux/payload-3rd-party/CMakeLists.txt
           sample/linux/telemetry/CMakeLists.txt
           sample/linux/time-sync/CMakeLists.txt
Copyright: 2016-2017 DJI *
License:   __UNKNOWN__
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 *

Files:     sample/STM32/OnBoardSDK_STM32/Lib/CMSIS/inc/core_cm4.h
           sample/STM32/OnBoardSDK_STM32/Lib/CMSIS/inc/core_cm4_simd.h
           sample/STM32/OnBoardSDK_STM32/Lib/CMSIS/inc/core_cmFunc.h
           sample/STM32/OnBoardSDK_STM32/Lib/CMSIS/inc/core_cmInstr.h
           sample/STM32/OnBoardSDK_STM32/Lib/CMSIS/inc/core_sc000.h
           sample/STM32/OnBoardSDK_STM32/Lib/CMSIS/inc/core_sc300.h
Copyright: 2009-2012 ARM Limited.
License:   __UNKNOWN__
 @par
 ARM Limited (ARM) is supplying this software for use with Cortex-M
 processor based microcontrollers.  This file can be freely distributed
 within development tools that are supporting such ARM based processors.
 .
 @par
 THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
 CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.

Files:     License.txt
Copyright: 2017-2018 DJI.
License:   MIT
 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Files:     contrib/DJIConfig.cmake
Copyright: 2016-2017 DJI *
License:   __UNKNOWN__
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 *
 .
 .
 Detecting target architecture to decide which precompiled library to link against

Files:     EULA.txt
Copyright: is disclosed to you by a third-party as a matter of right and without restriction on disclosure; or (d) is or was independently developed by you without access to, use of, or reference to the Confidential Information.
License:   __UNKNOWN__
 “Documentation” means any online read me, help files, technical specifications, or other related explanatory materials that are contained in the SDK or that accompany the SDK.
 “DJI” means SZ DJI TECHNOLOGY CO., LTD. and its affiliates.
 “DJI Products” means DJI hardware, software, and services, such as unmanned aerial vehicles (UAVs), flight controllers, sensors, cameras, gimbals, remote controllers, accessories, etc.
 “Event Data” means information about time of operation or events, session identification numbers, event types, and flight operation information, including but not limited to GPS data, navigation, operation, speed, distance, modes, mission, command, altitude, takeoff and landing, payload and other component use, battery levels, etc.
 “Header Data” means information about the software (including but not limited to installation identification, app key, SDK version of an Application) and hardware (including but not limited to product identifiers and names of UAVs, payloads, remote controllers, etc.).
 “Licensee Disclosure” means any information that you may provide to DJI in connection with this Agreement, including, for example, feedback on errors and improvements within or relating to the SDK.
 “Privacy Policy” means DJI’s privacy policy located at https://developer.dji.com/policies/privacy/.
 “SDK” or “Software Development Kit” means software (source code and object code), applications, tools, sample code, templates, fonts, logos, icons, images, libraries, interfaces, Updates, Documentation, application programming interfaces (APIs), information, data, files, and other materials, whether tangible or intangible, in whatever form or medium provided to you by DJI for use by you in connection with your Application. For the purpose of this Agreement, SDK includes, without limitation, (a) the DJI “Guidance” software development kit (https://developer.dji.com/guidance-sdk/), (b) the DJI “Mobile” software development kit (https://developer.dji.com/mobile-sdk/), and/or (c) the DJI “Onboard” software development kit (https://developer.dji.com/onboard-sdk/).
 “Open-Source Component” means software, interfaces and firmware subject to an open-source software license, which means any software license approved as open-source licenses by the Open Source Initiative or any substantially similar licenses, including without limitation any license that, as a condition of distribution of the software licensed under such license, requires that the distributor make the software available in source code format.
 “Third-Party Component” means software, interfaces and firmware licensed by DJI from a third-party (e.g., a supplier of DJI) for incorporation into the SDK and distributed as an integral part of the SDK, as applicable. Third-Party Components may include Open-Source Components.
 “Updates” means bug fixes, service packs, hot fixes, updates, upgrades, enhancements, modifications, and new releases of versions of the SDK.
 “Warranty Logs” means information provided to and/or received by the SDK that is necessary for determining warranty eligibility and product reliability, including without limitation SDK function calls (including without limitation time, function name, results/feedback, etc.), protocol or commands sent from or to a mobile device, an Application, and/or a remote controller (including without limitation time, name, type, command/action, etc.).
 .
 3. License.
 3.1 License Grants. The SDK is licensed, not sold, to you by DJI and/or, if applicable, its suppliers and licensors. Subject to the terms and conditions of this Agreement, you are hereby granted a limited, worldwide, non-exclusive, non-sublicensable, and nontransferable right to use the SDK solely in the manner described in the Documentation and solely to develop, test, and operate Applications in connection with DJI products.
 3.2 Use Restrictions. You may not use the SDK except as permitted in this Agreement and any additional terms and conditions that DJI provides pursuant to Section 3.1. Except with DJI’s prior written consent or otherwise provided herein, you may not: (a) alter, modify or create any derivative works of the SDK, including the underlying source code, or the Documentation in any way, including without limitation customization, translation or localization; (b) port, reverse compile, reverse assemble, reverse engineer, or otherwise attempt to separate any of the components of the SDK or derive the source code for the SDK (except to the extent applicable laws specifically prohibit such restriction); (c) copy, redistribute, encumber, sell, rent, lease, sublicense, or otherwise transfer rights to the SDK; (d) remove or alter any trademark, logo, copyright or other proprietary notices, legends, symbols or labels in the SDK; (e) block, disable, or otherwise affect any advertising, advertisement banner window, links to other sites and services, or other features that constitute an integral part of the SDK; or (f) use any part of the SDK to develop applications for use with hardware devices that are not DJI Products, unless they are the devices running the applications or are devices connected (directly or indirectly) to DJI Product(s) the SDK interfaces with. You may not release the results of any performance or functional evaluation of any of the SDK to any third-party without prior written approval of DJI for each such release. You may not cause or permit any third-party to do any of the foregoing.
 3.3 Distribution of Object Code. You may distribute your Application with object code of the SDK, provided that you must: (1) distribute such object code of the SDK in execution form only; (2) distribute such code only as a part of your Applications; (3) not distribute any portion of the SDK that is not object code, including but not limited to source code, header files and Documentation; (4) not charge a separate price or fee for the object code of the SDK that is distinct from the fee you charge for your Application; (5) not distribute, link, or integrate the object code of the SDK such that any part of the object code of the SDK becomes subject to an open source license; and (6) include the following copyright notice within your Application’s source code in the same locations as your own copyright notice: “Portions copyright (c) 2014–Present DJI. All rights reserved.”. To the extent that any source code is provided to you as part of the SDK, you may use, modify and compile the source code solely for the purposes of developing your Applications.
 3.4 Third-Party Components. You acknowledge that the SDK may contain Third-Party Components. All third-party licensors and suppliers retain all right, title and interest in and to such Third-Party Components and all copies thereof, including all copyright and other intellectual property rights. Your use of any Third-Party Components shall be subject to, and you shall comply with, the terms and conditions of this Agreement, and the applicable restrictions and other terms and conditions set forth in any Third-Party Components documentation or printed materials, including without limitation an end user license agreement.
 3.5 Open-Source Components. The SDK may include Open-Source Components that are subject to open-source software licenses. The Documentation accompanying the SDK includes copies of the licenses applicable to the Open-Source Components. To the extent there is conflict between the license terms covering the Open-Source Components and this Agreement, the terms of such licenses will apply in lieu of the terms of this Agreement. To the extent the terms of the licenses applicable to Open-Source Components prohibit any of the restrictions in this Agreement with respect to such Open-Source Component, such restrictions will not apply to such Open-Source Component.
 4. Reservation of Rights. DJI and its licensors reserve all rights, including but not limited to ownership and intellectual property rights, including in the SDK, not expressly granted to you. DJI’s licensors are the intended third-party beneficiaries of this Agreement and have the express right to rely upon and directly enforce the terms set forth herein. There are no implied licenses granted by DJI under this Agreement. Except as specified above, you shall have no rights to the SDK. You acknowledge and agree that the form and nature of the SDK that DJI provides may change without prior notice to you and that future versions of the SDK may be incompatible with Applications developed on previous versions of the SDK. You acknowledge and agree that DJI may stop providing the SDK or any features of the SDK permanently or temporarily to you or users generally at DJI’s sole discretion, without prior notice to you. If the SDK is a “beta” release, you acknowledge and agree that the SDK is a “beta” release for evaluation purposes only and may contain bugs, defects and errors and that the SDK may fail, return inaccurate results, and/or be subject to other malfunctions.
 5. Your Applications and Use of the SDK.
 5.1 Rights in Your Applications. Subject to Section 4 above, DJI agrees that it obtains no right, title, or interest from you (or your licensors) under this Agreement in or to any Applications that you develop using the SDK, including any sole and separate intellectual property rights of yours that subsist in those Applications.
 5.2 Permitted Applications. You agree to use the SDK and develop Applications solely for purposes that are permitted by: (a) this Agreement; (b) the DJI Developer Policy available at https://developer.dji.com/policies/developer/; and (c) any applicable law, rule, regulation, or generally accepted practice or guideline in the relevant jurisdiction, including but not limited to laws, rules, or regulations regarding the export of data or software to and from the United States or other relevant countries, and national, public, and personal security.
 5.3 Your Responsibilities. You agree that you are solely responsible for, and that DJI has no responsibility to you or any third-party for, or access to: (a) any data, content, or resources that you create, transmit, or display through the Applications you develop on or with the SDK (whether originating with you or a third-party), and for the consequences of your actions (including any loss or damage suffered by DJI) by doing so; and (b) any breach of your obligations under this Agreement, any applicable third-party contract or terms of service, or any applicable law, rule, or regulation, and for the consequences (including any loss or damage suffered by DJI) of any such breach.
 5.4 Compliance with Law; Safety. For the avoidance of doubt, you agree that you shall at all times strictly comply with all applicable laws, rules and regulations and shall not threaten the safety of national security, public security, or the health, privacy, or safety of any person.
 6. Privacy and Automatically Collected Information.
 6.1 SDK Use and User Information.  In order to continually improve the SDK, DJI may automatically collect certain usage statistics including, but not limited to, unique identifiers, associated IP address, and other information on which tools and services in the SDK are being used and how they are being used. This data is collected in the aggregate to improve the SDK and is maintained in accordance with DJI’s Privacy Policy. We may also collect certain personal information from you, including but not limited to your legal name, mailing address, phone number, email address, and other contact or personal information. We may also collect additional information in order to verify your identity or provide certain functions. This information will be maintained in accordance with DJI’s Privacy Policy, and you hereby agree that we may share this information with our third-party business partners for purposes of verifying your identity or provide certain functions and as otherwise permitted by our Privacy Policy.
 6.2 Application User Information.  The SDK may automatically collect Analytics Data, such as Header Data and/or Event Data. The Analytics Data may be provided to DJI and used by DJI for any use in research or improving its SDK or DJI Products. The Analytics Data may be used by DJI for any lawful purpose, including without limitation, for research or to improve its SDK or DJI Products. Certain SDK (e.g., Mobile SDK) may also automatically collect Warranty Log information, for example, for the purpose of determining warranty eligibility and product reliability. The Warranty Logs are stored locally on a device running the Application (e.g., mobile device) and are not automatically transmitted to DJI without prior user consent. You may be required to make the Warranty Logs available to DJI to support any warranty claims regarding the SDK. By using the SDK and creating an Application, you represent and warrant that you will provide clear and conspicuous notice to each user of the Application of the automatic collection, storage, and DJI’s use of the Analytics Data and Warranty Logs, and that you will obtain any legally-required consents for DJI to receive and use the Analytics Data and Warranty Logs for the purposes specified herein. The Application User Information is maintained in accordance with DJI’s Privacy Policy located at https://developer.dji.com/policies/privacy/.
 7. Proprietary Rights. You acknowledge and agree that the SDK belongs to DJI or its licensors. You agree that you neither own nor hereby acquire any claim or right of ownership to the SDK or to any related patents, copyrights, trademarks, or other intellectual property. DJI and its licensors retain all right, title, and interest in and to all copies of the SDK at all times, regardless of the form or media in or on which the original or other copies may subsequently exist. This license is not a sale of the original or any subsequent copy. The SDK is protected by copyright and other intellectual property laws and by international treaties. You may not make any copies of the SDK except as otherwise permitted by this Agreement. Any and all other copies of the SDK made by you are in violation of this license. All content accessed through the SDK is the property of the applicable content owner and may be protected by applicable copyright law. This license gives you no rights to such content. All trademarks used in connection with the SDK are owned by DJI, its affiliates and/or its licensors and other suppliers, and no license to use any such trademarks is provided hereunder.
 8. Information Submitted to DJI Not Deemed Confidential. DJI works with many application developers and some of their products may be similar to or compete with Your Applications. DJI may also be developing its own similar or competing applications, or may decide to do so in the future. To avoid potential misunderstandings, DJI CANNOT AGREE, AND EXPRESSLY DISCLAIMS, ANY CONFIDENTIALITY OBLIGATIONS OR USE RESTRICTIONS, EXPRESS OR IMPLIED, WITH RESPECT TO ANY LICENSEE DISCLOSURE. Such licensee disclosure may include, for example, feedback on errors and improvements within or relating to the SDK. You agree any such licensee disclosure will be non-confidential. DJI will be free to use and disclose any licensee disclosure on an unrestricted basis without notifying or compensating you. You release DJI from all liability and obligations that may arise from the receipt, review, use, or disclosure of any portion of any licensee disclosure. Any physical materials you submit to DJI will become DJI property and DJI will have no obligation to return those materials to you or to certify their destruction.
 9. No Support. This Agreement does not entitle you to receive from DJI or its licensors hard-copy documentation, support, telephone assistance, or enhancements or updates to the SDK.
 10. Term and Termination. This Agreement and your right to use the SDK may be terminated by you or by DJI at any time upon written notice. This Agreement automatically terminates if you fail to comply with its terms and conditions. Immediately upon termination, you shall return or destroy all copies of the SDK in your possession, custody, or control and, if requested by DJI, you shall certify to DJI in writing that such return or destruction has occurred. The following Sections of this Agreement survive any expiration or termination hereof: 1, 2, 3.2, 3.3, 3.4, 3.5, and 4 through 18 (inclusive).
 11. No warranty. YOU AGREE THAT THE SDK IS PROVIDED “AS IS” AND THAT DJI AND ITS LICENSORS MAKE NO OTHER WARRANTY AS TO THE SDK, INCLUDING, BUT NOT LIMITED TO, UNINTERRUPTED USE, ACCURACY, AND DATA LOSS. DJI AND ITS LICENSORS DISCLAIM ALL OTHER WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, PRIVACY, SECURITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE (EVEN IF DJI KNOWS OR SHOULD HAVE KNOWN OF SUCH PURPOSE), RELATED TO THE SDK, ITS USE OR ANY INABILITY TO USE IT, THE RESULTS OF ITS USE AND THIS AGREEMENT. DJI AND ITS LICENSORS DO NOT WARRANT THAT THE SDK OR ANY RESULTS OF USE THEREOF WILL BE FREE OF DEFECTS, ERRORS OR VIRUSES, RELIABLE OR ABLE TO OPERATE ON AN UNINTERRUPTED BASIS OR IN A PARTICULAR ENVIRONMENT OR THAT ERRORS THEREIN, IF ANY, WILL BE CORRECTED.
 12. Limitation of Liability. TO THE FULLEST EXTENT PERMITTED BY LAW, DJI AND ITS AFFILIATES AND LICENSORS SHALL NOT BE LIABLE FOR ANY DAMAGES, WHETHER IN CONTRACT OR TORT (INCLUDING NEGLIGENCE) OR ANY OTHER LEGAL OR EQUITABLE THEORY, ARISING FROM THIS AGREEMENT AND/OR YOUR USE OF THE SDK OR DEVELOPMENT OR DISTRIBUTION OF ANY APPLICATION, INCLUDING WITHOUT LIMITATION ANY INDIRECT, CONSEQUENTIAL, SPECIAL, EXEMPLARY, INCIDENTAL DAMAGES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. YOU AGREE THAT YOU SHALL HAVE THE SOLE RESPONSIBILITY FOR PROTECTING YOUR DATA, BY PERIODIC BACKUP OR OTHERWISE, USED IN CONNECTION WITH THE SDK. IN ANY CASE, DJI AND ITS AFFILIATES AND LICENSORS’ SOLE LIABILITY AND YOUR EXCLUSIVE REMEDY UNDER ANY PROVISION OF THIS AGREEMENT SHALL BE TO STOP USING THE SDK, WITH THE EXCEPTION OF DEATH OR PERSONAL INJURY CAUSED BY THE SOLE NEGLIGENCE OF DJI, AND SOLELY TO THE EXTENT APPLICABLE LAW PROHIBITS THE LIMITATION OF DAMAGES IN SUCH CASES.
 13. Indemnification. TO THE MAXIMUM EXTENT PERMITTED BY LAW, YOU AGREE TO DEFEND, INDEMNIFY, AND HOLD HARMLESS DJI, ITS AFFILIATES AND THEIR RESPECTIVE DIRECTORS, OFFICERS, EMPLOYEES, AND AGENTS FROM AND AGAINST ANY AND ALL CLAIMS, ACTIONS, SUITS, OR PROCEEDINGS, AS WELL AS ANY AND ALL LOSSES, LIABILITIES, DAMAGES, COSTS, AND EXPENSES (INCLUDING REASONABLE ATTORNEYS’ FEES) ARISING OUT OF OR ACCRUING FROM: (A) YOUR USE OF THE SDK, INCLUDING THIRD-PARTY SOFTWARE AND/OR DOCUMENTATION; (B) ANY APPLICATION YOU DEVELOP ON OR WITH THE SDK THAT IS ALLEGED TO OR DETERMINED TO INFRINGE ANY PATENT, COPYRIGHT, TRADEMARK, OR OTHER INTELLECTUAL PROPERTY OR PROPRIETARY RIGHT OF A THIRD PARTY; AND (C) YOUR NONCOMPLIANCE WITH ANY TERM OF THIS AGREEMENT, EXCEPT FOR DEATH OR PERSONAL INJURY CAUSED BY THE SOLE NEGLIGENCE OF DJI.
 14. Confidentiality. You shall use your best efforts to preserve and protect the confidentiality of the Confidential Information at all times, both during the term hereof and for a period of at least 3 years after termination of this Agreement, provided, however, that any source code you receive shall be held in confidence in perpetuity. You shall not disclose, disseminate, or otherwise publish or communicate Confidential Information to any person, firm, corporation or other third-party without the prior written consent of DJI. You shall not use any Confidential Information other than in the course of the activities permitted hereunder. You agree to use your best efforts to prevent and protect the contents of the SDK from unauthorized disclosure or use. You shall notify DJI in writing immediately upon discovery of any unauthorized use or disclosure of Confidential Information or any other breach of this Agreement, and will cooperate with DJI in every reasonable way to regain possession of Confidential Information and prevent any further unauthorized use.
 If you are legally compelled to disclose any of the Confidential Information, then, prior to such disclosure, you will (i) immediately notify DJI prior to such disclosure to allow DJI an opportunity to contest the disclosure, (ii) assert the privileged and confidential nature of the Confidential Information, and (iii) cooperate fully with DJI in protecting against any such disclosure and/or obtaining a protective order narrowing the scope of such disclosure and/or use of the Confidential Information. In the event such protection is not obtained, you shall disclose the Confidential Information only to the extent necessary to comply with the applicable legal requirements.
 15. Injunctive Relief. You acknowledge and agree that your breach or threatened breach of this Agreement shall cause DJI irreparable damage for which recovery of money damages would be inadequate and that DJI therefore may obtain timely injunctive relief to protect its rights under this Agreement in addition to any and all other remedies available at law or in equity.

Files:     sample/STM32/OnBoardSDK_STM32/Lib/CMSIS/inc/arm_math.h
Copyright: 2010-2011 ARM Limited.
License:   __UNKNOWN__
 $Date:        15. February 2012
 $Revision: 	V1.1.0
 .
 Project: 	    CMSIS DSP Library

Files:     sample/STM32/OnBoardSDK_STM32/Lib/CMSIS/inc/arm_common_tables.h
Copyright: 2010 ARM Limited.
License:   __UNKNOWN__
 $Date:        11. November 2010
 $Revision: 	V1.0.2
 .
 Project: 	    CMSIS DSP Library

#----------------------------------------------------------------------------
# xml and html files (skipped):
#         sample/STM32/OnBoardSDK_STM32/Project/OnBoardSDK_STM32.uvprojx
#         sample/Qt/djiosdk-qt-sample/resources.qrc
#         sample/Qt/djiosdk-qt-sample/qtosdk.ui
#         sample/Qt/djiosdk-qt-sample/Subscribe/subscribe_panel.ui
#         sample/Qt/djiosdk-qt-sample/CameraGimbalControl/camera_gimbal_control_panel.ui
#         sample/Qt/djiosdk-qt-sample/Broadcast/broadcast.ui
#         sample/Qt/djiosdk-qt-sample/Missions/hotpoint_panel.ui
#         sample/Qt/djiosdk-qt-sample/Missions/qwaypoints.ui
#         sample/Qt/djiosdk-qt-sample/FlightControl/flight_control_panel.ui
#         sample/Qt/djiosdk-qt-sample/MFIO/mfio_panel.ui

#----------------------------------------------------------------------------
# binary files (skipped):
#         sample/STM32/OnBoardSDK_STM32/Lib/CMSIS/libarm_cortexM4lf_math.a
#         sample/Qt/djiosdk-qt-sample/images/check-square.png
#         sample/Qt/djiosdk-qt-sample/images/dji_logo_gray.png
#         sample/Qt/djiosdk-qt-sample/images/caret-down.png
#         utility/bin/linux/x86-64/M210ConfigTool
#         utility/bin/armv7/32-bit/M210ConfigTool
#         utility/bin/armv8/64-bit/M210ConfigTool

#----------------------------------------------------------------------------
# Files marked as NO_LICENSE_TEXT_FOUND may be covered by the following
# license/copyright files.

#----------------------------------------------------------------------------
# License file: License.txt
 The following portions of the DJI’s Onboard SDK (“Software” referred to in the terms below) are made available to you under the terms of the MIT License provided below.
 .
 Onboard-SDK
 ├── CMakeLists.txt
 ├── contrib
 │   └── DJIConfig.cmake
 ├── osdk-core
 │   ├── api
 │   │   ├── inc
 │   │   │   ├── dji_ack.hpp
 │   │   │   ├── dji_broadcast.hpp
 │   │   │   ├── dji_camera.hpp
 │   │   │   ├── dji_command.hpp
 │   │   │   ├── dji_control.hpp
 │   │   │   ├── dji_error.hpp
 │   │   │   ├── dji_gimbal.hpp
 │   │   │   ├── dji_hardware_sync.hpp
 │   │   │   ├── dji_hotpoint.hpp
 │   │   │   ├── dji_mfio.hpp
 │   │   │   ├── dji_mission_base.hpp
 │   │   │   ├── dji_mission_manager.hpp
 │   │   │   ├── dji_mission_type.hpp
 │   │   │   ├── dji_mobile_communication.hpp
 │   │   │   ├── dji_mobile_device.hpp
 │   │   │   ├── dji_payload_device.hpp
 │   │   │   ├── dji_status.hpp
 │   │   │   ├── dji_subscription.hpp
 │   │   │   ├── dji_telemetry.hpp
 │   │   │   ├── dji_telemetry_doc.hpp
 │   │   │   ├── dji_type.hpp
 │   │   │   ├── dji_vehicle_callback.hpp
 │   │   │   ├── dji_vehicle.hpp
 │   │   │   ├── dji_version.hpp
 │   │   │   ├── dji_virtual_rc.hpp
 │   │   │   └── dji_waypoint.hpp
 │   │   └── src
 │   │       ├── dji_ack.cpp
 │   │       ├── dji_broadcast.cpp
 │   │       ├── dji_camera.cpp
 │   │       ├── dji_command.cpp
 │   │       ├── dji_control.cpp
 │   │       ├── dji_error.cpp
 │   │       ├── dji_gimbal.cpp
 │   │       ├── dji_hardware_sync.cpp
 │   │       ├── dji_hotpoint.cpp
 │   │       ├── dji_mfio.cpp
 │   │       ├── dji_mission_manager.cpp
 │   │       ├── dji_mobile_communication.cpp
 │   │       ├── dji_mobile_device.cpp
 │   │       ├── dji_payload_device.cpp
 │   │       ├── dji_subscription.cpp
 │   │       ├── dji_vehicle.cpp
 │   │       ├── dji_version.cpp
 │   │       ├── dji_virtual_rc.cpp
 │   │       └── dji_waypoint.cpp
 │   ├── CMakeLists.txt
 │   ├── cmake-modules
 │   │   ├── DJIOSDKConfig.cmake
 │   │   ├── DJIOSDKConfig.cmake.in
 │   │   ├── DJIOSDKConfigVersion.cmake
 │   │   ├── DJIOSDKConfigVersion.cmake.in
 │   │   ├── External_AdvancedSensing.cmake
 │   │   ├── FindAdvancedSensing.cmake
 │   │   ├── FindFFMPEG.cmake
 │   │   └── FindLibUSB.cmake
 │   ├── config_example.json
 │   ├── hal
 │   │   ├── inc
 │   │   │   ├── dji_hard_driver.hpp
 │   │   │   ├── dji_log.hpp
 │   │   │   ├── dji_memory.hpp
 │   │   │   ├── dji_platform_manager.hpp
 │   │   │   └── dji_thread_manager.hpp
 │   │   └── src
 │   │       ├── dji_hard_driver.cpp
 │   │       ├── dji_log.cpp
 │   │       ├── dji_memory.cpp
 │   │       ├── dji_platform_manager.cpp
 │   │       └── dji_thread_manager.cpp
 │   ├── platform
 │   │   ├── default
 │   │   │   ├── inc
 │   │   │   │   └── dji_memory_default.hpp
 │   │   │   ├── readme.md
 │   │   │   └── src
 │   │   │       └── dji_memory_default.cpp
 │   │   ├── linux
 │   │   │   ├── inc
 │   │   │   │   ├── linux_serial_device.hpp
 │   │   │   │   ├── posix_thread.hpp
 │   │   │   │   └── posix_thread_manager.hpp
 │   │   │   └── src
 │   │   │       ├── linux_serial_device.cpp
 │   │   │       ├── posix_thread.cpp
 │   │   │       └── posix_thread_manager.cpp
 │   │   ├── manifold
 │   │   │   ├── inc
 │   │   │   │   ├── DJI_HardDriver_Manifold.h
 │   │   │   │   └── DJIHardDriverManifold.h
 │   │   │   └── src
 │   │   │       └── DJIHardDriverManifold.cpp
 │   │   ├── qt
 │   │   │   ├── inc
 │   │   │   │   ├── qt_serial_device.hpp
 │   │   │   │   └── qt_thread.hpp
 │   │   │   └── src
 │   │   │       ├── qt_serial_device.cpp
 │   │   │       └── qt_thread.cpp
 │   │   ├── Readme.md
 │   │   └── STM32
 │   │       ├── inc
 │   │       │   ├── STM32F4DataGuard.h
 │   │       │   ├── STM32F4SerialDriver.h
 │   │       └── src
 │   │           ├── STM32F4DataGuard.cpp
 │   │           └── STM32F4SerialDriver.cpp
 │   ├── protocol
 │   │   ├── inc
 │   │   │   ├── dji_aes.hpp
 │   │   │   ├── dji_crc.hpp
 │   │   │   ├── dji_open_protocol.hpp
 │   │   │   └── dji_protocol_base.hpp
 │   │   └── src
 │   │       ├── dji_aes.cpp
 │   │       ├── dji_open_protocol.cpp
 │   │       └── dji_protocol_base.cpp
 │   ├── README.md
 │   └── utility
 │       ├── inc
 │       │   ├── dji_circular_buffer.hpp
 │       │   ├── dji_macros.hpp
 │       │   └── dji_singleton.hpp
 │       └── src
 │           ├── dji_circular_buffer.cpp
 │           └── dji_singleton.cpp
 └── sample
     ├── linux
     │   ├── advanced-sensing
     │   │   ├── camera_stream_callback_sample
     │   │   │   ├── camera-stream-callback-sample.cpp
     │   │   │   └── CMakeLists.txt
     │   │   ├── camera_stream_poll_sample
     │   │   │   ├── camera-stream-poll-sample.cpp
     │   │   │   └── CMakeLists.txt
     │   │   ├── camera_stream_target_tracking_sample
     │   │   │   ├── CMakeLists.txt
     │   │   │   ├── target_tracking.cpp
     │   │   │   ├── tracking_utility.cpp
     │   │   │   └── tracking_utility.hpp
     │   │   ├── CMakeLists.txt
     │   │   ├── stereo_vision_depth_perception_sample
     │   │   │   ├── utility
     │   │   │   │   ├── camera_param.cpp
     │   │   │   │   ├── camera_param.hpp
     │   │   │   │   ├── config.cpp
     │   │   │   │   ├── config.hpp
     │   │   │   │   ├── frame.hpp
     │   │   │   │   ├── point_cloud_viewer.cpp
     │   │   │   │   ├── point_cloud_viewer.hpp
     │   │   │   │   ├── stereo_frame.cpp
     │   │   │   │   └── stereo_frame.hpp
     │   │   │   ├── stereo_vision_depth_perception_sample.cpp
     │   │   │   ├── stereo_vision_depth_perception_sample.hpp
     │   │   │   ├── CMakeLists.txt
     │   │   │   ├── stereo_process_container.cpp
     │   │   │   └── stereo_process_container.hpp
     │   │   ├── stereo_vision_multi_thread_sample
     │   │   │   ├── stereo_vision_multi_thread_sample.cpp
     │   │   │   ├── stereo_vision_multi_thread_sample.hpp
     │   │   │   ├── CMakeLists.txt
     │   │   │   ├── image_process_container.cpp
     │   │   │   ├── image_process_container.hpp
     │   │   │   ├── utility_thread.cpp
     │   │   │   └── utility_thread.hpp
     │   │   └── stereo_vision_single_thread_sample
     │   │       ├── stereo_vision_single_thread_sample.cpp
     │   │       ├── stereo_vision_single_thread_sample.hpp
     │   │       └── CMakeLists.txt
     │   ├── camera-gimbal
     │   │   ├── camera_gimbal_sample.cpp
     │   │   ├── camera_gimbal_sample.hpp
     │   │   ├── CMakeLists.txt
     │   │   └── main.cpp
     │   ├── CMakeLists.txt
     │   ├── common
     │   │   ├── dji_linux_environment.cpp
     │   │   ├── dji_linux_environment.hpp
     │   │   ├── dji_linux_helpers.cpp
     │   │   ├── dji_linux_helpers.hpp
     │   │   └── UserConfig.txt
     │   ├── flight-control
     │   │   ├── CMakeLists.txt
     │   │   ├── flight_control_sample.cpp
     │   │   ├── flight_control_sample.hpp
     │   │   └── main.cpp
     │   ├── logging
     │   │   ├── CMakeLists.txt
     │   │   ├── logging_sample.cpp
     │   │   ├── logging_sample.hpp
     │   │   └── main.cpp
     │   ├── mfio
     │   │   ├── CMakeLists.txt
     │   │   ├── main.cpp
     │   │   ├── mfio_sample.cpp
     │   │   └── mfio_sample.hpp
     │   ├── missions
     │   │   ├── CMakeLists.txt
     │   │   ├── main.cpp
     │   │   ├── mission_sample.cpp
     │   │   └── mission_sample.hpp
     │   ├── mobile
     │   │   ├── CMakeLists.txt
     │   │   ├── main.cpp
     │   │   ├── mobile_sample.cpp
     │   │   └── mobile_sample.hpp
     │   ├── payload-3rd-party
     │   │   ├── CMakeLists.txt
     │   │   ├── main.cpp
     │   │   ├── payload-control-sample.cpp
     │   │   └── payload-control-sample.hpp
     │   ├── telemetry
     │   │   ├── CMakeLists.txt
     │   │   ├── main.cpp
     │   │   ├── telemetry_sample.cpp
     │   │   ├── telemetry_sample.hpp
     │   ├── time-sync
     │   │   ├── CMakeLists.txt
     │   │   ├── time_sync_callback_sample.cpp
     │   │   └── time_sync_poll_sample.cpp
     ├── Qt
     │   ├── djiosdk-qt-sample
     │   │   ├── Broadcast
     │   │   │   ├── broadcast.cpp
     │   │   │   ├── broadcast.hpp
     │   │   │   ├── broadcast.pri
     │   │   │   └── broadcast.ui
     │   │   ├── CameraGimbalControl
     │   │   │   ├── camera_gimbal_control_panel.cpp
     │   │   │   ├── camera_gimbal_control_panel.hpp
     │   │   │   ├── camera_gimbal_control_panel.pri
     │   │   │   └── camera_gimbal_control_panel.ui
     │   │   ├── CMakeLists.txt
     │   │   ├── djiosdk-qt-sample.pro
     │   │   ├── FlightControl
     │   │   │   ├── flight_control_panel.cpp
     │   │   │   ├── flight_control_panel.hpp
     │   │   │   ├── flight_control_panel.pri
     │   │   │   └── flight_control_panel.ui
     │   │   ├── images
     │   │   │   ├── caret-down.png
     │   │   │   ├── check-square.png
     │   │   │   └── dji_logo_gray.png
     │   │   ├── main.cpp
     │   │   ├── MFIO
     │   │   │   ├── mfio_panel.cpp
     │   │   │   ├── mfio_panel.hpp
     │   │   │   ├── mfio_panel.pri
     │   │   │   └── mfio_panel.ui
     │   │   ├── Missions
     │   │   │   ├── hotpoint_panel.cpp
     │   │   │   ├── hotpoint_panel.hpp
     │   │   │   ├── hotpoint_panel.ui
     │   │   │   ├── Missions.pri
     │   │   │   ├── qwaypoints.cpp
     │   │   │   ├── qwaypoints.hpp
     │   │   │   ├── qwaypoints.ui
     │   │   │   └── sdk_widgets.hpp
     │   │   ├── qtosdk.cpp
     │   │   ├── qtosdk.hpp
     │   │   ├── qtosdk.ui
     │   │   ├── resources.qrc
     │   │   ├── stylesheets
     │   │   │   └── material-blue.qss
     │   │   ├── Subscribe
     │   │   │   ├── subscribe_panel.cpp
     │   │   │   ├── subscribe_panel.hpp
     │   │   │   ├── SubscribePanel.pri
     │   │   │   └── subscribe_panel.ui
     │   │   └── UserConfig.txt
     │   └── README.md
     └── STM32
         ├── OnBoardSDK_STM32
         │   ├── Bsp
         │   │   ├── bsp.cpp
         │   │   ├── bsp.h
         │   │   ├── BspUsart.cpp
         │   │   ├── BspUsart.h
         │   │   ├── timer.cpp
         │   │   └── timer.h
         │   ├── doc
         │   │   └── readme.txt
         │   ├── keilkilll.bat
         │   ├── Project
         │   │   ├── OnBoardSDK_STM32.uvprojx
         │   │   └── RTE
         │   │       └── _DJI_LIB
         │   │           └── RTE_Components.h
         │   ├── Project_Gcc
         │   │   ├── Makefile
         │   │   ├── setup_and_build.sh
         │   │   ├── startup_stm32f40xx.s
         │   │   ├── stm32_flash.ld
         │   │   └── syscalls.c
         │   ├── RTE
         │   │   └── RTE_Components.h
         │   └── User
         │       ├── Activate.cpp
         │       ├── Activate.h
         │       ├── CameraGimbalSample.cpp
         │       ├── CameraGimbalSample.h
         │       ├── cppforstm32.cpp
         │       ├── cppforstm32.h
         │       ├── FlightControlSample.cpp
         │       ├── FlightControlSample.h
         │       ├── main.cpp
         │       ├── main.h
         │       ├── MissionSample.cpp
         │       ├── MissionSample.h
         │       ├── MobileSample.cpp
         │       ├── MobileSample.h
         │       ├── PayloadSample.cpp
         │       ├── PayloadSample.h
         │       ├── Receive.cpp
         │       ├── Receive.h
         │       ├── stm32f4xx_conf.h
         │       ├── TelemetrySample.cpp
         │       ├── TelemetrySample.h
         │       ├── TimeSyncSample.cpp
         │       └── TimeSyncSample.h
         └── README.md
 .
 Unless otherwise agreed, all other portions of DJI’s Onboard SDK are and will be made available under the SDK End User License Agreement (EULA). A copy of the SDK EULA is distributed with this software and is available at https://developer.dji.com/policies/eula/.
 -------------------------------------------------------------
 Copyright (c) 2017-2018 DJI.
 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 ===============================================================
 DJI’s Onboard SDK uses unmodified libraries of UDT version 4 (http://udt.sourceforge.net/), which is licensed under BSD license. A copy of the BSD license is provided below and is also available at http://udt.sourceforge.net/LICENSE.txt.
 .
 -------------------------------------------------------------
 Copyright (c) 2001 - 2009, The Board of Trustees of the University of Illinois.
 All rights reserved.
 .
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are
 met:
 .
 * Redistributions of source code must retain the above
   copyright notice, this list of conditions and the
   following disclaimer.
 .
 * Redistributions in binary form must reproduce the
   above copyright notice, this list of conditions
   and the following disclaimer in the documentation
   and/or other materials provided with the distribution.
 .
 * Neither the name of the University of Illinois
   nor the names of its contributors may be used to
   endorse or promote products derived from this
   software without specific prior written permission.
 .
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ===============================================================
 DJI’s Onboard SDK dynamically links to unmodified libraries of FFmpeg (https://ffmpeg.org/), which is licensed under LGPL 2.1. A copy of the LGPL 2.1 license is provided below and is also available at http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 -------------------------------------------------------------
 GNU LESSER GENERAL PUBLIC LICENSE
 Version 2.1, February 1999
 Copyright (C) 1991, 1999 Free Software Foundation, Inc.
 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.
 .
 [This is the first released version of the Lesser GPL.  It also counts as the successor of the GNU Library Public License, version 2, hence the version number 2.1.]
 Preamble
 The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public Licenses are intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users.
 This license, the Lesser General Public License, applies to some specially designated software packages--typically libraries--of the Free Software Foundation and other authors who decide to use it. You can use it too, but we suggest you first think carefully about whether this license or the ordinary General Public License is the better strategy to use in any particular case, based on the explanations below.
 When we speak of free software, we are referring to freedom of use, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish); that you receive source code or can get it if you want it; that you can change the software and use pieces of it in new free programs; and that you are informed that you can do these things.
 To protect your rights, we need to make restrictions that forbid distributors to deny you these rights or to ask you to surrender these rights. These restrictions translate to certain responsibilities for you if you distribute copies of the library or if you modify it.
 For example, if you distribute copies of the library, whether gratis or for a fee, you must give the recipients all the rights that we gave you. You must make sure that they, too, receive or can get the source code. If you link other code with the library, you must provide complete object files to the recipients, so that they can relink them with the library after making changes to the library and recompiling it. And you must show them these terms so they know their rights.
 We protect your rights with a two-step method: (1) we copyright the library, and (2) we offer you this license, which gives you legal permission to copy, distribute and/or modify the library.
 To protect each distributor, we want to make it very clear that there is no warranty for the free library. Also, if the library is modified by someone else and passed on, the recipients should know that what they have is not the original version, so that the original author's reputation will not be affected by problems that might be introduced by others.
 Finally, software patents pose a constant threat to the existence of any free program. We wish to make sure that a company cannot effectively restrict the users of a free program by obtaining a restrictive license from a patent holder. Therefore, we insist that any patent license obtained for a version of the library must be consistent with the full freedom of use specified in this license.
 Most GNU software, including some libraries, is covered by the ordinary GNU General Public License. This license, the GNU Lesser General Public License, applies to certain designated libraries, and is quite different from the ordinary General Public License. We use this license for certain libraries in order to permit linking those libraries into non-free programs.
 When a program is linked with a library, whether statically or using a shared library, the combination of the two is legally speaking a combined work, a derivative of the original library. The ordinary General Public License therefore permits such linking only if the entire combination fits its criteria of freedom. The Lesser General Public License permits more lax criteria for linking other code with the library.
 We call this license the "Lesser" General Public License because it does Less to protect the user's freedom than the ordinary General Public License. It also provides other free software developers Less of an advantage over competing non-free programs. These disadvantages are the reason we use the ordinary General Public License for many libraries. However, the Lesser license provides advantages in certain special circumstances.
 For example, on rare occasions, there may be a special need to encourage the widest possible use of a certain library, so that it becomes a de-facto standard. To achieve this, non-free programs must be allowed to use the library. A more frequent case is that a free library does the same job as widely used non-free libraries. In this case, there is little to gain by limiting the free library to free software only, so we use the Lesser General Public License.
 In other cases, permission to use a particular library in non-free programs enables a greater number of people to use a large body of free software. For example, permission to use the GNU C Library in non-free programs enables many more people to use the whole GNU operating system, as well as its variant, the GNU/Linux operating system.
 Although the Lesser General Public License is Less protective of the users' freedom, it does ensure that the user of a program that is linked with the Library has the freedom and the wherewithal to run that program using a modified version of the Library.
 The precise terms and conditions for copying, distribution and modification follow. Pay close attention to the difference between a "work based on the library" and a "work that uses the library". The former contains code derived from the library, whereas the latter must be combined with the library in order to run.
 TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
 0. This License Agreement applies to any software library or other program which contains a notice placed by the copyright holder or other authorized party saying it may be distributed under the terms of this Lesser General Public License (also called "this License"). Each licensee is addressed as "you".
 A "library" means a collection of software functions and/or data prepared so as to be conveniently linked with application programs (which use some of those functions and data) to form executables.
 The "Library", below, refers to any such software library or work which has been distributed under these terms. A "work based on the Library" means either the Library or any derivative work under copyright law: that is to say, a work containing the Library or a portion of it, either verbatim or with modifications and/or translated straightforwardly into another language. (Hereinafter, translation is included without limitation in the term "modification".)
 "Source code" for a work means the preferred form of the work for making modifications to it. For a library, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the library.
 Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running a program using the Library is not restricted, and output from such a program is covered only if its contents constitute a work based on the Library (independent of the use of the Library in a tool for writing it). Whether that is true depends on what the Library does and what the program that uses the Library does.
 1. You may copy and distribute verbatim copies of the Library's complete source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and distribute a copy of this License along with the Library.
 You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.
 2. You may modify your copy or copies of the Library or any portion of it, thus forming a work based on the Library, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:
 •	a) The modified work must itself be a software library.
 •	b) You must cause the files modified to carry prominent notices stating that you changed the files and the date of any change.
 •	c) You must cause the whole of the work to be licensed at no charge to all third parties under the terms of this License.
 •	d) If a facility in the modified Library refers to a function or a table of data to be supplied by an application program that uses the facility, other than as an argument passed when the facility is invoked, then you must make a good faith effort to ensure that, in the event an application does not supply such function or table, the facility still operates, and performs whatever part of its purpose remains meaningful.
 (For example, a function in a library to compute square roots has a purpose that is entirely well-defined independent of the application. Therefore, Subsection 2d requires that any application-supplied function or table used by this function must be optional: if the application does not supply it, the square root function must still compute square roots.)
 These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Library, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Library, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.
 Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Library.
 In addition, mere aggregation of another work not based on the Library with the Library (or with a work based on the Library) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.
 3. You may opt to apply the terms of the ordinary GNU General Public License instead of this License to a given copy of the Library. To do this, you must alter all the notices that refer to this License, so that they refer to the ordinary GNU General Public License, version 2, instead of to this License. (If a newer version than version 2 of the ordinary GNU General Public License has appeared, then you can specify that version instead if you wish.) Do not make any other change in these notices.
 Once this change is made in a given copy, it is irreversible for that copy, so the ordinary GNU General Public License applies to all subsequent copies and derivative works made from that copy.
 This option is useful when you wish to copy part of the code of the Library into a program that is not a library.
 4. You may copy and distribute the Library (or a portion or derivative of it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange.
 If distribution of object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place satisfies the requirement to distribute the source code, even though third parties are not compelled to copy the source along with the object code.
 5. A program that contains no derivative of any portion of the Library, but is designed to work with the Library by being compiled or linked with it, is called a "work that uses the Library". Such a work, in isolation, is not a derivative work of the Library, and therefore falls outside the scope of this License.
 However, linking a "work that uses the Library" with the Library creates an executable that is a derivative of the Library (because it contains portions of the Library), rather than a "work that uses the library". The executable is therefore covered by this License. Section 6 states terms for distribution of such executables.
 When a "work that uses the Library" uses material from a header file that is part of the Library, the object code for the work may be a derivative work of the Library even though the source code is not. Whether this is true is especially significant if the work can be linked without the Library, or if the work is itself a library. The threshold for this to be true is not precisely defined by law.
 If such an object file uses only numerical parameters, data structure layouts and accessors, and small macros and small inline functions (ten lines or less in length), then the use of the object file is unrestricted, regardless of whether it is legally a derivative work. (Executables containing this object code plus portions of the Library will still fall under Section 6.)
 Otherwise, if the work is a derivative of the Library, you may distribute the object code for the work under the terms of Section 6. Any executables containing that work also fall under Section 6, whether or not they are linked directly with the Library itself.
 6. As an exception to the Sections above, you may also combine or link a "work that uses the Library" with the Library to produce a work containing portions of the Library, and distribute that work under terms of your choice, provided that the terms permit modification of the work for the customer's own use and reverse engineering for debugging such modifications.
 You must give prominent notice with each copy of the work that the Library is used in it and that the Library and its use are covered by this License. You must supply a copy of this License. If the work during execution displays copyright notices, you must include the copyright notice for the Library among them, as well as a reference directing the user to the copy of this License. Also, you must do one of these things:
 •	a) Accompany the work with the complete corresponding machine-readable source code for the Library including whatever changes were used in the work (which must be distributed under Sections 1 and 2 above); and, if the work is an executable linked with the Library, with the complete machine-readable "work that uses the Library", as object code and/or source code, so that the user can modify the Library and then relink to produce a modified executable containing the modified Library. (It is understood that the user who changes the contents of definitions files in the Library will not necessarily be able to recompile the application to use the modified definitions.)
 •	b) Use a suitable shared library mechanism for linking with the Library. A suitable mechanism is one that (1) uses at run time a copy of the library already present on the user's computer system, rather than copying library functions into the executable, and (2) will operate properly with a modified version of the library, if the user installs one, as long as the modified version is interface-compatible with the version that the work was made with.
 •	c) Accompany the work with a written offer, valid for at least three years, to give the same user the materials specified in Subsection 6a, above, for a charge no more than the cost of performing this distribution.
 •	d) If distribution of the work is made by offering access to copy from a designated place, offer equivalent access to copy the above specified materials from the same place.
 •	e) Verify that the user has already received a copy of these materials or that you have already sent this user a copy.
 For an executable, the required form of the "work that uses the Library" must include any data and utility programs needed for reproducing the executable from it. However, as a special exception, the materials to be distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.
 It may happen that this requirement contradicts the license restrictions of other proprietary libraries that do not normally accompany the operating system. Such a contradiction means you cannot use both them and the Library together in an executable that you distribute.
 7. You may place library facilities that are a work based on the Library side-by-side in a single library together with other library facilities not covered by this License, and distribute such a combined library, provided that the separate distribution of the work based on the Library and of the other library facilities is otherwise permitted, and provided that you do these two things:
 •	a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities. This must be distributed under the terms of the Sections above.
 •	b) Give prominent notice with the combined library of the fact that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work.
 8. You may not copy, modify, sublicense, link with, or distribute the Library except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, link with, or distribute the Library is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.
 9. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Library or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Library (or any work based on the Library), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Library or works based on it.
 10. Each time you redistribute the Library (or any work based on the Library), the recipient automatically receives a license from the original licensor to copy, distribute, link with or modify the Library subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties with this License.
 11. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Library at all. For example, if a patent license would not permit royalty-free redistribution of the Library by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Library.
 If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply, and the section as a whole is intended to apply in other circumstances.
 It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.
 This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.
 12. If the distribution and/or use of the Library is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Library under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.
 13. The Free Software Foundation may publish revised and/or new versions of the Lesser General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.
 Each version is given a distinguishing version number. If the Library specifies a version number of this License which applies to it and "any later version", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Library does not specify a license version number, you may choose any version ever published by the Free Software Foundation.
 14. If you wish to incorporate parts of the Library into other free programs whose distribution conditions are incompatible with these, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.
 NO WARRANTY
 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
 END OF TERMS AND CONDITIONS
 How to Apply These Terms to Your New Libraries
 If you develop a new library, and you want it to be of the greatest possible use to the public, we recommend making it free software that everyone can redistribute and change. You can do so by permitting redistribution under these terms (or, alternatively, under the terms of the ordinary General Public License).
 To apply these terms, attach the following notices to the library. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the "copyright" line and a pointer to where the full notice is found.
 one line to give the library's name and an idea of what it does.
 Copyright (C) year  name of author
 .
 This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.
 .
 This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 .
 You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 Also add information on how to contact you by electronic and paper mail.
 You should also get your employer (if you work as a programmer) or your school, if any, to sign a "copyright disclaimer" for the library, if necessary. Here is a sample; alter the names:
 Yoyodyne, Inc., hereby disclaims all copyright interest in
 the library `Frob' (a library for tweaking knobs) written
 by James Random Hacker.
 .
 signature of Ty Coon, 1 April 1990
 Ty Coon, President of Vice
 That's all there is to it!
 .
 ===============================================================
 DJI’s Onboard SDK uses unmodified libraries of DownloadProject (https://github.com/Crascit/DownloadProject.git), which is licensed under MIT license. A copy of the MIT license is provided below and is also available at https://raw.githubusercontent.com/Crascit/DownloadProject/master/LICENSE.
 .
 The MIT License (MIT)
 .
 Copyright (c) 2015 Crascit
 .
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
 .
 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.
 .
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
 .
 .
